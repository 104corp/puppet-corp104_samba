
####### Authentication #######

# Server role. Defines in which mode Samba will operate. Possible
# values are "standalone server", "member server", "classic primary
# domain controller", "classic backup domain controller", "active
# directory domain controller".
#
# Most people will want "standalone sever" or "member server".
# Running as "active directory domain controller" will require first
# running "samba-tool domain provision" to wipe databases and create a
# new domain.
  server role = <%= @server_role %>

# If you are using encrypted passwords, Samba will need to know what
# password database type you are using.
  passdb backend = <%= @passdb_backend %>

<% if @obey_pam_restrictions -%>
  obey pam restrictions = yes
<% else -%>
  obey pam restrictions = no
<% end -%>

# This boolean parameter controls whether Samba attempts to sync the Unix
# password with the SMB password when the encrypted SMB password in the
# passdb is changed.

<% if @unix_password_sync -%>
  unix password sync = yes
<% else -%>
  unix password sync = no
<% end -%>

# For Unix password sync to work on a Debian GNU/Linux system, the following
# parameters must be set (thanks to Ian Kahan <<kahan@informatik.tu-muenchen.de> for
# sending the correct chat script for the passwd program in Debian Sarge).
  passwd program = <%= @passwd_program %>
  passwd chat = <%= @passwd_chat %>

# This boolean controls whether PAM will be used for password changes
# when requested by an SMB client instead of the program listed in
# 'passwd program'. The default is 'no'.
<% if @pam_password_change -%>
  pam password change = yes
<% else -%>
  pam password change = no
<% end -%>

# This option controls how unsuccessful authentication attempts are mapped
# to anonymous connections
  map to guest = <%= @map_to_guest %>
